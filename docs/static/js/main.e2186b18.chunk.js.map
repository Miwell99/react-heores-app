{"version":3,"sources":["auth/AuthContext.js","types/types.js","components/ui/Navbar.js","data/heroes.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/ui/PageTitle.js","components/marvel/MarvelScreen.js","components/dc/DcScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/ui/Footer.js","routers/DashboardRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/login/LoginScreen.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","Navbar","useContext","user","dispatch","history","useHistory","className","to","activeClassName","exact","name","onClick","replace","type","heroes","HeroScreen","heroeId","useParams","hero","useMemo","id","find","superhero","publisher","alter_ego","first_appearance","characters","src","alt","lenght","push","goBack","HeroCard","style","maxWidth","substring","HeroList","includes","Error","filter","getHeroesByPublisher","map","PageTitle","title","MarvelScreen","DcScreen","SearchScreen","location","useLocation","queryString","parse","search","query","initialState","useState","values","setValues","target","value","useForm","searchInput","formValues","handleInputChange","result","toLocaleLowerCase","onSubmit","e","preventDefault","autoComplete","placeholder","onChange","length","Footer","DashboardRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","pathname","props","PublicRoute","LoginScreen","lastPath","getItem","payload","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2186b18.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext();","\r\nexport const types = {\r\n    login: '[auth] login',\r\n    logout: '[auth] logout'\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { user, dispatch } = useContext(AuthContext);\r\n    const history = useHistory();   // <Navbar> doesnt belong to any Route, then it doesnt have Router.history, we need the hook\r\n\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login')\r\n\r\n        dispatch({\r\n            type: types.logout,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n            <Link\r\n                className=\"navbar-brand m-3\"\r\n                to=\"/\"\r\n            >\r\n                Heroes React App\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {user.name}\r\n                    </span>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link btn\"\r\n                        exact\r\n                        to=\"/login\"\r\n                        onClick={handleLogout}\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();     // Custom Hook from react router\r\n    //const hero = getHeroById(heroeId);\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId])\r\n\r\n    // Hero validation.\r\n    if (!hero) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n\r\n    const handleGoBack = () => {\r\n        if (history.lenght < 2) {\r\n            // Evade logout\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={`../assets/heroes/${heroeId}.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeftBig\"\r\n                />\r\n            </div>\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3 className=\"text-center\">{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b>{alter_ego}</li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b>{publisher}</li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b>{first_appearance}</li>\r\n                </ul>\r\n                <div className=\"m-3\">\r\n                    <h5>Characters</h5>\r\n                    <p>{characters}</p>\r\n\r\n                    <button\r\n                        className=\"btn btn-info\"\r\n                        onClick={handleGoBack}>\r\n                        Go Back\r\n                     </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n        <div className=\"card\" style={{ maxWidth: 400 }}>\r\n            <div className=\"row \">\r\n                <div className=\"col-md-6\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n                        {\r\n                            (alter_ego!==characters) \r\n                                && <p className=\"card-text\">{characters.substring(0,30)+'...'}</p>\r\n                        }\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n                        <Link to={`./hero/${id}`}>\r\n                            More data\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\nimport './heroScreen.css';\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    // const heroes = getHeroesByPublisher(publisher);  // Before useMemo. The component is rendering everytime.\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]) // Before useMemo. The component is rendering again only if we change the state.\r\n\r\n    return (\r\n        <div className=\"cards-container animate__animated animate__fadeInDown \">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard key={hero.id}\r\n                        {...hero}\r\n\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n    if (!validPublishers.includes(publisher)) {\r\n        throw new Error(\"Publisher \" + publisher + \" not valid.\");\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PageTitle = ({title}) => {\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center p-2\">{title}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nPageTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\nimport { PageTitle } from '../ui/PageTitle'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <PageTitle title=\"Marvel Heroes\" />\r\n\r\n            <HeroList publisher='Marvel Comics'></HeroList>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\nimport { PageTitle } from '../ui/PageTitle'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <PageTitle title=\"DC Screen\" />\r\n\r\n            <HeroList publisher='DC Comics'></HeroList>\r\n        </div>\r\n    )\r\n}\r\n","import { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\n\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\nimport { PageTitle } from '../ui/PageTitle';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const { query = '' } = queryString.parse(location.search)    // NPM to manage query params\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchInput: query\r\n    });\r\n    const { searchInput } = formValues;\r\n\r\n    // To trigger the search event only after submit\r\n    const result = useMemo(() => getHeroesByName(query), [query])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?query=${searchInput}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Search Screen\" />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSubmit} >\r\n                        <input\r\n                            name=\"searchInput\"\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                            placeholder=\"Find a hero\"\r\n                            className=\"form-control\"\r\n                            value={searchInput}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <br></br>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Find!\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4> Search results</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        // Empty input\r\n                        (query === '') &&\r\n                        <div className=\"alert alert-info\">\r\n                            Waiting for your heroes ...\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        // Result not found\r\n                        (query !== '' && result.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            There is no superhero with the name <b>{searchInput}</b> ... for now!\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        result.map(hero => (\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </ >\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByName = (name) => {\r\n\r\n    if( name === ''){\r\n        return [];\r\n    }\r\n    \r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter (hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n}\r\n","import React from 'react';\r\nimport './footer.css'\r\n\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <>\r\n            <div className=\"footer\">\r\n                <p className=\"text-center mt-3\">\r\n                    Author: Miguel González Bravo &copy;\r\n            </p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\nimport { Footer } from '../components/ui/Footer';\r\n\r\nexport const DashboardRouter = () => {\r\n    return (\r\n        <>\r\n            <Navbar/>\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                    <Route exact path=\"/dc\" component={DcScreen} />\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n            <Footer/>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * To protect Routes only for logged users.\r\n */\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);   //To remember last route!\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n// Argument Validation Required\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * To prevent the use case of a user login again without logout before.\r\n */\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n// Argument Validation Required\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\nimport { PageTitle } from '../ui/PageTitle';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const { dispatch } = useContext(AuthContext);\r\n\r\n    const handleLogin = () => {\r\n        // history.push('/')  // ! No sustituye la historia y se podria navegar hacia atrás estando deslogeado\r\n        // history.replace('/');    // Sustituye la historia, para evitar cargar paginas antiguas al dar atras sin estar logeado.\r\n\r\n        const lastPath = localStorage.getItem('lastPath') || '/';   // To remember last route!\r\n\r\n        const action = {\r\n            type: types.login,\r\n            payload: {\r\n                name: 'Miwell',\r\n            }\r\n        }\r\n        dispatch(action);\r\n        history.replace(lastPath);\r\n    }\r\n    return (\r\n        <div className=\"container m-5\">\r\n            <PageTitle title=\"Login\" />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport { DashboardRouter } from './DashboardRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\nconst {user} = useContext(AuthContext);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                \r\n                    <PublicRoute exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={user.logged}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        path=\"/\"\r\n                        component={DashboardRouter}\r\n                        isAuthenticated = {user.logged}\r\n                    />\r\n                    {/* <Route path=\"/\" component={DashboardRouter} /> */}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n    // Now we can obtain the user on every part of the app, because is storaged on AppContext (using localStorage)\r\n\r\n    // Remember user after reload.\r\n    useEffect(() => {\r\n        localStorage.setItem('user',JSON.stringify(user));\r\n    }, [user]);\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, dispatch }}>\r\n            <AppRouter />\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}